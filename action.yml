name: 'Connect to Twingate'
description: 'Connects to Twingate protected resources from your Github Action workflow'
branding:
  icon: 'arrow-right-circle'
  color: 'black'
inputs:
  service-key:
    description: 'Twingate Service Key'
    required: true
  initial-wait-time:
    description: 'Initial wait time in seconds before retrying Twingate connection. Defaults to 5.'
    required: false
    default: '5'
  max-retries:
    description: 'Maximum number of retry attempts if the Twingate service fails to connect. Defaults to 5.'
    required: false
    default: '5'
runs:
  using: "composite"
  steps:
    - name: Error if unsupported runner.os
      if: runner.os != 'Linux' && runner.os != 'Windows'
      shell: bash
      run: |
        echo "Unsupported Runner OS: ${{ runner.os }}"
        exit 1

    - name: Install Twingate (Linux)
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo apt update
        echo "deb [trusted=yes] https://packages.twingate.com/apt/ /" | sudo tee /etc/apt/sources.list.d/twingate.list
        sudo apt-get update -o Dir::Etc::sourcelist="sources.list.d/twingate.list" -o Dir::Etc::sourceparts="-" -o APT::Get::List-Cleanup="0"
        sudo apt install -yq twingate
    
    - name: Setup and start Twingate (Linux)
      if: runner.os == 'Linux'
      shell: bash
      run: |
        echo '${{ inputs.service-key }}' | sudo twingate setup --headless -
        MAX_RETRIES=${{ inputs.max-retries }}
        WAIT_TIME=${{ inputs.initial-wait-time }}
        n=0

        while [ $n -lt $MAX_RETRIES ]; do
          echo "Starting Twingate service..."
          set +xe
          twingate start

          echo "Waiting $WAIT_TIME seconds for Twingate service to start..."
          sleep $WAIT_TIME

          status=$(twingate status)
          echo "Twingate service status: '$status'"

          if [ "$status" = "online" ]; then
            echo "Twingate service is connected."
            twingate resources
            break
          else
            twingate stop
            journalctl -u twingate --no-pager
          fi

          # Increment the retry counter and wait time
          n=$((n+1))
          WAIT_TIME=$((WAIT_TIME+5))

          echo "Twingate service is not connected. Retrying ..."
        done

        if [ $n -eq $MAX_RETRIES ]; then
          echo "Twingate service failed to connect."
          exit 1
        fi

    - name: Install and Start Twingate (Windows)
      if: runner.os == 'Windows'
      shell: powershell
      run: |
          Invoke-WebRequest https://api.twingate.com/download/windows?installer=msi -OutFile .\twingate_client.msi

          Set-Content .\key.json  '${{ inputs.service-key }}'
          $key_path = (Get-Item .\key.json | Resolve-Path).ProviderPath

          Start-Process msiexec.exe -Wait -ArgumentList "/i twingate_client.msi service_secret=$key_path /quiet"
          
          Start-Service twingate.service
          Start-Sleep -Seconds 10
          Get-Service twingate.service
